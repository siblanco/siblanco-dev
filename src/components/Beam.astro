<div class="bg-green beam" data-component="beam" transition:persist></div>

<style>
  .beam {
    position: fixed;
    left: 50%;
    top: 70px;

    width: 300vh;
    height: 200px;

    z-index: -1;
    opacity: 0.01;

    transition:
      transform 0.5s,
      background-color 0.5s,
      opacity 1s;

    --beam-scale: 2;
    transform: translateX(-50%) scale(var(--beam-scale)) rotate(160deg);

    @media screen and (min-width: 768px) {
      height: 300px;
    }
    @media screen and (min-width: 1200px) {
      height: 450px;
    }
  }
</style>

<script>
  const beam = document.querySelector(
    "[data-component=beam]",
  ) as HTMLDivElement;

  beam.style.opacity = "0.1";
  const getCurrentScale = () => beam.dataset.scale;

  const getNextScale = (): number => {
    const getRandomInt = (min: number, max: number) => {
      min = Math.ceil(min);
      max = Math.floor(max);
      return Math.floor(Math.random() * (max - min + 1)) + min;
    };

    const currentScale = getCurrentScale();
    const nextScale = getRandomInt(2, 4);

    if (currentScale === undefined) {
      // start off with 2 to match the initial scale
      return 2;
    }

    return nextScale === +currentScale ? getNextScale() : nextScale;
  };

  document.addEventListener("astro:page-load", () => {
    const nextScale = getNextScale().toString();
    beam.setAttribute("data-scale", nextScale);
    beam.style.setProperty("--beam-scale", nextScale);
  });
</script>
